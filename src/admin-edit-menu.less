.admin-edit-menu-block {
  margin: 3vw 0 0 3vw;
  width: 90%;
  height: 80%;
  background-color: white;
  -webkit-box-shadow: 0px 0px 10px 3px rgba(34, 60, 80, 0.2);
  -moz-box-shadow: 0px 0px 10px 3px rgba(34, 60, 80, 0.2);
  box-shadow: 0px 0px 10px 3px rgba(34, 60, 80, 0.2);

  .admin-edit-menu-block > div > span {
  }

  .admin-edit-menu-choice {
    display: flex;
    flex-direction: row;
    div {
      padding-right: 2vw;
    }
  }
  .admin-edit-menu-table {
    width: 100%;
    border: none;
    margin-bottom: 20px;
    padding-top: 5px;
  }

  .admin-edit-menu-table thead th {
    font-weight: bold;
    text-align: left;
    border: none;
    padding: 10px 15px;
    background: #d8d8d8;
    font-size: 14px;
  }

  .admin-edit-menu-table thead tr th:first-child {
    border-radius: 8px 0 0 8px;
  }

  .admin-edit-menu-table thead tr th:last-child {
    border-radius: 0 8px 8px 0;
  }

  .admin-edit-menu-table tbody td {
    text-align: left;
    border: none;
    padding: 10px 15px;
    font-size: 14px;
    vertical-align: top;
  }

  .admin-edit-menu-table tbody tr:nth-child(even) {
    background: #e5e5e5;
  }

  .admin-edit-menu-table tbody tr td:first-child {
    border-radius: 8px 0 0 8px;
  }

  .admin-edit-menu-table tbody tr td:last-child {
    border-radius: 0 8px 8px 0;
  }

}


/* The toggle container */
.switch {
  width: 38px;
  border-radius: 11px;
}

/* The toggle knob */
.switch::after {
  left: 2px;
  top: 2px;
  border-radius: 50%;
  width: 15px;
  height: 15px;
  background: var(--ab, var(--border));
  transform: translateX(var(--x, 0));
}

/* Change color and position when checked */
.switch:checked {
  --ab: var(--active-inner);
  --x: 17px;
}

/* Drop the opacity of the toggle knob when the input is disabled */
.switch:disabled:not(:checked)::after {
  opacity: .6;
}

/* The toggle container */
.switch {
  width: 38px;
  border-radius: 11px;
}

/* The toggle knob */
.switch::after {
  left: 2px;
  top: 2px;
  border-radius: 50%;
  width: 15px;
  height: 15px;
  background: var(--ab, var(--border));
  transform: translateX(var(--x, 0));
}

/* Change color and position when checked */
.switch:checked {
  --ab: var(--active-inner);
  --x: 17px;
}

/* Drop the opacity of the toggle knob when the input is disabled */
.switch:disabled:not(:checked)::after {
  opacity: .6;
}

input[type='checkbox'],
input[type='radio'] {
  --active: #275EFE;
  --border: #BBC1E1;
  border: 1px solid var(--bc, var(--border));
}

input[type='checkbox']:checked,
input[type='radio']:checked {
  --b: var(--active);
  --bc: var(--active);
}

/* Apply another border color on hover if not checked & not disabled */
input[type='checkbox']:not(:checked):not(:disabled):hover,
input[type='radio']:not(:checked):not(:disabled):hover {
  --bc: var(--border-hover);
}

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type='checkbox'],
  input[type='radio'] {
    --active: #275EFE;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .25);
    --border: #BBC1E1;
    --border-hover: #275EFE;
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
  }
}
