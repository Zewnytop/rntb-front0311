
.admin-edit-menu-choice {
  display: flex;
  flex-direction: row;

  div {
    padding-right: 2vw;
  }
}

.admin-edit-menu-language {
  ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: row;
    align-items: flex-start;

    li {
      padding: 0px 25px 0px 0px;
    }
    li:hover {
      font-weight: bold;
    }
    li:active {
      font-weight: bold;
    }
  }
}


.info {
  position: relative;
  display: inline-block;
  .info-dropdown {
    visibility: hidden;
    width: 190px;
    background-color: #555;
    color: #fff;
    text-align: left;
    padding: 5px 0;
    border-radius: 6px;

    /* Расположите текст подсказки */
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 0%;
    margin-left: -85px;

    /* Исчезают в подсказке */
    opacity: 0;
    transition: opacity 0.3s;

    ul {
      list-style: none;
      padding: 0;
      display: flex;
      flex-direction: column;


      li {
        position: relative;
        padding: 7px 10px;
        font-weight: lighter;

        img {
          padding-right: 3px;
        }
      }
    }
  }
}
.info .info-dropdown::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}
.info:hover .info-dropdown {
  visibility: visible;
  opacity: 95%;
}


.inherit-table {
  padding-left: 100px;
  margin-top: -20px;
  width: 100%;

  thead tr th {
    font-weight: bold;
    text-align: left;
    border: none;
    padding: 9px 15px;
    background: #d2e8ff;
    font-size: 12px;
  }
}


/* The toggle container */
.switch {
  width: 38px;
  border-radius: 11px;
}

/* The toggle knob */
.switch::after {
  left: 2px;
  top: 2px;
  border-radius: 50%;
  width: 15px;
  height: 15px;
  background: var(--ab, var(--border));
  transform: translateX(var(--x, 0));
}

/* Change color and position when checked */
.switch:checked {
  --ab: var(--active-inner);
  --x: 17px;
}

/* Drop the opacity of the toggle knob when the input is disabled */
.switch:disabled:not(:checked)::after {
  opacity: .6;
}

/* The toggle container */
.switch {
  width: 38px;
  border-radius: 11px;
}

/* The toggle knob */
.switch::after {
  left: 2px;
  top: 2px;
  border-radius: 50%;
  width: 15px;
  height: 15px;
  background: var(--ab, var(--border));
  transform: translateX(var(--x, 0));
}

/* Change color and position when checked */
.switch:checked {
  --ab: var(--active-inner);
  --x: 17px;
}

/* Drop the opacity of the toggle knob when the input is disabled */
.switch:disabled:not(:checked)::after {
  opacity: .6;
}

input[type='checkbox'],
input[type='radio'] {
  --active: #275EFE;
  --border: #BBC1E1;
  border: 1px solid var(--bc, var(--border));
}

input[type='checkbox']:checked,
input[type='radio']:checked {
  --b: var(--active);
  --bc: var(--active);
}

/* Apply another border color on hover if not checked & not disabled */
input[type='checkbox']:not(:checked):not(:disabled):hover,
input[type='radio']:not(:checked):not(:disabled):hover {
  --bc: var(--border-hover);
}

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type='checkbox'],
  input[type='radio'] {
    --active: #275EFE;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .25);
    --border: #BBC1E1;
    --border-hover: #275EFE;
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
  }
}
